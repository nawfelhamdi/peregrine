{
	"name": "FromDdsToBlob",
	"properties": {
		"activities": [
			{
				"name": "Lookup control table",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Audit Logging Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('select * from ctl.control_table_parameter where active_flag=''Y'' and pipeline_name=''',pipeline().Pipeline,''' and measurement_model = ''',pipeline().parameters.measurement_model,'''')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable",
						"type": "DatasetReference",
						"parameters": {
							"schema": "ctl",
							"table": "control_table_parameter"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup control table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup control table').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "from dds to blob",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@item().system_parameter",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "AzureSqlTable",
									"type": "DatasetReference",
									"parameters": {
										"schema": {
											"value": "@item().source_table_schema",
											"type": "Expression"
										},
										"table": {
											"value": "@item().source_table_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "csv_file",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@item().target_table_schema",
											"type": "Expression"
										},
										"File": {
											"value": "@item().target_table_name",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Row count validation",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "from dds to blob",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(activity('from dds to blob').output.rowsRead,activity('from dds to blob').output.rowsCopied)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Fail Message - Row Count",
										"type": "Fail",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"message": {
												"value": "@concat('Row counts of copy from ',item().source_table_schema,'.',item().source_table_name,' to ',item().target_table_schema,'/',item().target_table_name, ' do not match.')",
												"type": "Expression"
											},
											"errorCode": "000"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Audit Logging Start",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Audit Logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.pipeline_log_id",
							"type": "Expression"
						},
						"Name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"Status": "Running",
						"Data_source": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Audit Logging Success",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ForEach",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Audit Logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.pipeline_log_id",
							"type": "Expression"
						},
						"Name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"Status": "Success",
						"Data_source": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Audit Logging Failed",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ForEach",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Audit Logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.pipeline_log_id",
							"type": "Expression"
						},
						"Name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"Status": "Failed",
						"Data_source": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"measurement_model": {
				"type": "string",
				"defaultValue": "PAA"
			},
			"pipeline_log_id": {
				"type": "string"
			}
		},
		"folder": {
			"name": "1. Main/1. Data Preparation"
		},
		"annotations": [],
		"lastPublishTime": "2022-05-25T19:24:55Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}