{
	"name": "API_Call_Pipeline_backup",
	"properties": {
		"activities": [
			{
				"name": "Create new project",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Get Serect - header_authorization_key",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Serect - storage_account_base_url",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Serect - header_content_type",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Serect - api_base_url",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Serect - header_accept",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Serect - header_authorization_method",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Get Serect - storage_account_sas_key",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Init storage_account_container",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Init storage_account_input_folder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(activity('Get Serect - api_base_url').output.value,'/projects_module/projects')",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "vm-shir",
						"type": "IntegrationRuntimeReference"
					},
					"method": "POST",
					"headers": {
						"accept": {
							"value": "@activity('Get Serect - header_accept').output.value",
							"type": "Expression"
						},
						"Authorization": {
							"value": "@concat(activity('Get Serect - header_authorization_method').output.value,' ',activity('Get Serect - header_authorization_key').output.value)",
							"type": "Expression"
						},
						"Content-Type": {
							"value": "@activity('Get Serect - header_content_type').output.value",
							"type": "Expression"
						}
					},
					"body": {
						"value": "@concat('{\"data\":{\"type\":\"projects_module/project\",\"attributes\":{\"name\":\"',pipeline().parameters.project_name,'\",\"t_0\":\"',pipeline().parameters.start_date,'\",\"t_1\":\"',pipeline().parameters.end_date,'\",\"description\":\"',pipeline().parameters.description,'\",\"level_parameter\":\"Consolidation\",\"type_parameter\":\"Internal\",\"method_parameter\":\"QTD\",\"frequency_parameter\":\"Quarterly\"}}}')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set project_id",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Create new project - Checking",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "project_id",
					"value": {
						"value": "@activity('Create new project').output.data.id",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Create new project - Checking",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Create new project",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Create new project - Status').output.data.attributes.status,'success')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Create new project - Status",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@concat(activity('Get Serect - api_base_url').output.value,'/tasks_module/tasks/',activity('Create new project').output.data.attributes.initialization_task_id)",
									"type": "Expression"
								},
								"connectVia": {
									"referenceName": "vm-shir",
									"type": "IntegrationRuntimeReference"
								},
								"method": "GET",
								"headers": {
									"accept": {
										"value": "@activity('Get Serect - header_accept').output.value",
										"type": "Expression"
									},
									"Authorization": {
										"value": "@concat(activity('Get Serect - header_authorization_method').output.value,' ',activity('Get Serect - header_authorization_key').output.value)",
										"type": "Expression"
									},
									"Content-Type": {
										"value": "@activity('Get Serect - header_content_type').output.value",
										"type": "Expression"
									}
								}
							}
						}
					],
					"timeout": "00.00:30:00"
				}
			},
			{
				"name": "List blob files",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Set project_id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(activity('Get Serect - api_base_url').output.value,'/cloud_module/blobs','?',encodeUriComponent('q[url]'),'=',encodeUriComponent(concat(activity('Get Serect - storage_account_base_url').output.value,variables('storage_account_container'),'/',variables('storage_account_input_folder'),'?',activity('Get Serect - storage_account_sas_key').output.value)))",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "vm-shir",
						"type": "IntegrationRuntimeReference"
					},
					"method": "GET",
					"headers": {
						"accept": {
							"value": "@activity('Get Serect - header_accept').output.value",
							"type": "Expression"
						},
						"Authorization": {
							"value": "@concat(activity('Get Serect - header_authorization_method').output.value,' ',activity('Get Serect - header_authorization_key').output.value)",
							"type": "Expression"
						},
						"Content-Type": {
							"value": "@activity('Get Serect - header_content_type').output.value",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Import file to project",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "List blob files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(activity('Get Serect - api_base_url').output.value,'/projects_module/projects/',variables('project_id'),'/cloud_storage_import','?',encodeUriComponent('q[url]'),'=',encodeUriComponent(concat(activity('Get Serect - storage_account_base_url').output.value,variables('storage_account_container'),'/',variables('storage_account_input_folder'),'?',activity('Get Serect - storage_account_sas_key').output.value)),'&',encodeUriComponent('q[import_type]'),'=',encodeUriComponent('S'),'&',encodeUriComponent('q[append]'),'=',encodeUriComponent('false'))",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "vm-shir",
						"type": "IntegrationRuntimeReference"
					},
					"method": "POST",
					"headers": {
						"accept": {
							"value": "@activity('Get Serect - header_accept').output.value",
							"type": "Expression"
						},
						"Authorization": {
							"value": "@concat(activity('Get Serect - header_authorization_method').output.value,' ',activity('Get Serect - header_authorization_key').output.value)",
							"type": "Expression"
						},
						"Content-Type": {
							"value": "@activity('Get Serect - header_content_type').output.value",
							"type": "Expression"
						}
					},
					"body": {
						"value": "@concat('{\"data\":',activity('List blob files').output.data,'}')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get Serect - api_base_url",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Audit Logging Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(variables('key_vault_url'),'/secrets/api-base-url?api-version=7.0')",
						"type": "Expression"
					},
					"method": "GET",
					"disableCertValidation": false,
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "Get Serect - header_accept",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Audit Logging Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(variables('key_vault_url'),'/secrets/header-accept?api-version=7.0')",
						"type": "Expression"
					},
					"method": "GET",
					"disableCertValidation": false,
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "Get Serect - header_authorization_method",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Audit Logging Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(variables('key_vault_url'),'/secrets/header-authorization-method?api-version=7.0')",
						"type": "Expression"
					},
					"method": "GET",
					"disableCertValidation": false,
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "Get Serect - storage_account_sas_key",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Audit Logging Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(variables('key_vault_url'),'/secrets/storage-account-sas-key?api-version=7.0')",
						"type": "Expression"
					},
					"method": "GET",
					"disableCertValidation": false,
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "Get Serect - header_content_type",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Audit Logging Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(variables('key_vault_url'),'/secrets/header-content-type?api-version=7.0')",
						"type": "Expression"
					},
					"method": "GET",
					"disableCertValidation": false,
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "Get Serect - storage_account_base_url",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Audit Logging Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(variables('key_vault_url'),'/secrets/storage-account-base-url?api-version=7.0')",
						"type": "Expression"
					},
					"method": "GET",
					"disableCertValidation": false,
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "Get Serect - header_authorization_key",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Audit Logging Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(variables('key_vault_url'),'/secrets/header-authorization-key?api-version=7.0')",
						"type": "Expression"
					},
					"method": "GET",
					"disableCertValidation": false,
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "Calculation",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Audit Logging Success",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Calculation",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"project_id": {
							"value": "@variables('project_id')",
							"type": "Expression"
						},
						"key_vault_url": {
							"value": "@variables('key_vault_url')",
							"type": "Expression"
						},
						"pipeline_log_id": {
							"value": "@pipeline().parameters.pipeline_log_id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Download_output",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Calculation",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Download_output",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"project_id": {
							"value": "@variables('project_id')",
							"type": "Expression"
						},
						"key_vault_url": {
							"value": "@variables('key_vault_url')",
							"type": "Expression"
						},
						"storage_account_output_folder": {
							"value": "@variables('storage_account_output_folder')",
							"type": "Expression"
						},
						"storage_account_container": {
							"value": "@variables('storage_account_container')",
							"type": "Expression"
						},
						"pipeline_log_id": {
							"value": "@pipeline().parameters.pipeline_log_id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Import file to project - Checking",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Import file to project",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Import file to project - Status').output.data.attributes.status,'success')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Import file to project - Status",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@concat(activity('Get Serect - api_base_url').output.value,'/tasks_module/tasks/',activity('Import file to project').output.data.id)",
									"type": "Expression"
								},
								"connectVia": {
									"referenceName": "vm-shir",
									"type": "IntegrationRuntimeReference"
								},
								"method": "GET",
								"headers": {
									"accept": {
										"value": "@activity('Get Serect - header_accept').output.value",
										"type": "Expression"
									},
									"Authorization": {
										"value": "@concat(activity('Get Serect - header_authorization_method').output.value,' ',activity('Get Serect - header_authorization_key').output.value)",
										"type": "Expression"
									},
									"Content-Type": {
										"value": "@activity('Get Serect - header_content_type').output.value",
										"type": "Expression"
									}
								}
							}
						}
					],
					"timeout": "00.00:30:00"
				}
			},
			{
				"name": "FromBlobToArchive",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Download_output",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "FromBlobToArchive",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"project_id": {
							"value": "@variables('project_id')",
							"type": "Expression"
						},
						"measurement_model": {
							"value": "@pipeline().parameters.measurement_model",
							"type": "Expression"
						},
						"pipeline_log_id": {
							"value": "@pipeline().parameters.pipeline_log_id",
							"type": "Expression"
						},
						"ui_project_id": {
							"value": "@pipeline().parameters.id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Init storage_account_container",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Audit Logging Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "storage_account_container",
					"value": {
						"value": "@toLower(pipeline().parameters.measurement_model)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Audit Logging Failed - Calculation",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Calculation",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Pipeline Step Logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.pipeline_log_id",
							"type": "Expression"
						},
						"Name": {
							"value": "@activity('Calculation').output.pipelineName",
							"type": "Expression"
						},
						"Status": "Failed",
						"Data_source": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Audit Logging Failed - Download_output",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Download_output",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Pipeline Step Logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.pipeline_log_id",
							"type": "Expression"
						},
						"Name": {
							"value": "@activity('Download_output').output.pipelineName",
							"type": "Expression"
						},
						"Status": "Failed",
						"Data_source": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Audit Logging Failed - FromBlobToArchive",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "FromBlobToArchive",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Pipeline Step Logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.pipeline_log_id",
							"type": "Expression"
						},
						"Name": {
							"value": "@activity('FromBlobToArchive').output.pipelineName",
							"type": "Expression"
						},
						"Status": "Failed",
						"Data_source": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Audit Logging Start",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Pipeline Step Logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.pipeline_log_id",
							"type": "Expression"
						},
						"Name": "Project creation",
						"Status": "Running",
						"Data_source": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Update project table",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Set project_id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[ctl].[sp_project_update]",
					"storedProcedureParameters": {
						"id": {
							"value": {
								"value": "@pipeline().parameters.id",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"moody_project_id": {
							"value": {
								"value": "@variables('project_id')",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Audit Logging Failed - API_Call_Pipeline 1",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Create new project",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Pipeline Step Logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.pipeline_log_id",
							"type": "Expression"
						},
						"Name": "Project creation",
						"Status": "Failed",
						"Data_source": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Audit Logging Success",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Import file to project - Checking",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Pipeline Step Logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.pipeline_log_id",
							"type": "Expression"
						},
						"Name": "Project creation",
						"Status": "Success",
						"Data_source": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Init storage_account_input_folder",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Audit Logging Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "storage_account_input_folder",
					"value": {
						"value": "@concat('processed','/',pipeline().parameters.id)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Audit Logging Failed - API_Call_Pipeline 2",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "List blob files",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Pipeline Step Logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.pipeline_log_id",
							"type": "Expression"
						},
						"Name": "Project creation",
						"Status": "Failed",
						"Data_source": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Audit Logging Failed - API_Call_Pipeline 3",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Import file to project",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Pipeline Step Logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ID": {
							"value": "@pipeline().parameters.pipeline_log_id",
							"type": "Expression"
						},
						"Name": "Project creation",
						"Status": "Failed",
						"Data_source": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"project_name": {
				"type": "string",
				"defaultValue": "default project"
			},
			"start_date": {
				"type": "string",
				"defaultValue": "2019-12-31"
			},
			"end_date": {
				"type": "string",
				"defaultValue": "2020-03-31"
			},
			"description": {
				"type": "string",
				"defaultValue": "This is a demo project"
			},
			"measurement_model": {
				"type": "string",
				"defaultValue": "GMM"
			},
			"id": {
				"type": "string"
			},
			"pipeline_log_id": {
				"type": "string"
			}
		},
		"variables": {
			"project_id": {
				"type": "String"
			},
			"key_vault_url": {
				"type": "String",
				"defaultValue": "https://peregrine-key-vault.vault.azure.net"
			},
			"storage_account_container": {
				"type": "String"
			},
			"storage_account_input_folder": {
				"type": "String"
			},
			"storage_account_output_folder": {
				"type": "String",
				"defaultValue": "output"
			}
		},
		"folder": {
			"name": "1. Main/2. Moody API call"
		},
		"annotations": [],
		"lastPublishTime": "2022-05-25T19:37:29Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}