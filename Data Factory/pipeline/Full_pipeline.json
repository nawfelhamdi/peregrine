{
	"name": "Full_pipeline",
	"properties": {
		"activities": [
			{
				"name": "Data_Preparation_pipeline",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Lookup pipeline log id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Data_Preparation_pipeline",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"measurement_model": {
							"value": "@pipeline().parameters.measurement_model",
							"type": "Expression"
						},
						"pipeline_log_id": {
							"value": "@activity('Lookup pipeline log id').output.firstRow.id",
							"type": "Expression"
						},
						"project_id": {
							"value": "@pipeline().parameters.id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "API_Call_Pipeline",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Data_Preparation_pipeline",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "API_Call_Pipeline",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"project_name": {
							"value": "@pipeline().parameters.project_name",
							"type": "Expression"
						},
						"start_date": {
							"value": "@pipeline().parameters.start_date",
							"type": "Expression"
						},
						"end_date": {
							"value": "@pipeline().parameters.end_date",
							"type": "Expression"
						},
						"description": {
							"value": "@pipeline().parameters.description",
							"type": "Expression"
						},
						"measurement_model": {
							"value": "@pipeline().parameters.measurement_model",
							"type": "Expression"
						},
						"id": {
							"value": "@pipeline().parameters.id",
							"type": "Expression"
						},
						"pipeline_log_id": {
							"value": "@activity('Lookup pipeline log id').output.firstRow.id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Pipeline Logging Start",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Pipeline Logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"Name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"Status": "Running",
						"Data_source": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						},
						"Project_id": {
							"value": "@pipeline().parameters.id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Pipeline Logging Success",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "API_Call_Pipeline",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Pipeline Logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"Name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"Status": "Success",
						"Data_source": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						},
						"Project_id": {
							"value": "@pipeline().parameters.id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Pipeline Logging Failed 2",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "API_Call_Pipeline",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Pipeline Logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"Name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"Status": "Failed",
						"Data_source": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						},
						"Project_id": {
							"value": "@pipeline().parameters.id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Lookup pipeline log id",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Pipeline Logging Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('select id from ctl.pipeline_log where project_id=',pipeline().parameters.id,'and status=''Running''')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable",
						"type": "DatasetReference",
						"parameters": {
							"schema": "ctl",
							"table": "pipeline_log"
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Pipeline Logging Failed 1",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Data_Preparation_pipeline",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Pipeline Logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"Name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"Status": "Failed",
						"Data_source": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						},
						"Project_id": {
							"value": "@pipeline().parameters.id",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"project_name": {
				"type": "string",
				"defaultValue": "default project"
			},
			"start_date": {
				"type": "string",
				"defaultValue": "2019-12-31"
			},
			"end_date": {
				"type": "string",
				"defaultValue": "2020-03-31"
			},
			"description": {
				"type": "string",
				"defaultValue": "This is a demo project"
			},
			"measurement_model": {
				"type": "string",
				"defaultValue": "PAA"
			},
			"id": {
				"type": "string"
			}
		},
		"folder": {
			"name": "1. Main"
		},
		"annotations": [],
		"lastPublishTime": "2022-06-21T13:10:38Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}